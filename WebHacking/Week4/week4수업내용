게시판을 미리 만들어라

3개월 과정 : 해킹 수업.
_______________________

*로그인
> 식별 / 인증

수 많은 데이터에서 특정 데이터를 찾아내는 것
그 사람이 본인이 맞는지 확인하는 작업

1) 식별 / 인증 동시

2) 식별 / 인증 분리

3,4) with Hash (비밀번호)

__________________________

쿠키 / 세션 / 세션ID
웹 서버로 요청을 보낼 때, 붙이는 데이터 쪼가리
서버에 저장되는 데이터 - 세션
(예 - 인증이나 인가는 세션 정보로 구현할 것.)
세션ID - 누구꺼의 값인지 식별하는 식별 정보

__________________________

* Burp Suite
> Web Proxy Tool
a와 b 사이에서 쪽지를 대신 전달해주는 친구 (proxy)
웹 서버 간에 오고가는 것들을 전달해주는 친구 (Web Proxy)

| 클라이언트  <->  burpsuite | <->  웹서버

<proxy 설정>
loopback only -> local 컴퓨터에서만 burpsuite을 사용할 때,
All interfaces -> local 컴퓨터에서 burpsuite을 켜고, 
다른 pc에서 크롬을 키고 웹서버랑 주고 받는 것을 보고 싶으면,
 외부의 컴퓨터가 local 컴퓨터의 burpsuite으로 데이터를 보내주어야함.
 다른 사람이 내 컴퓨터를 거쳐가도록 만들고 싶어

burpsuite setting

burpsuite -> 독자적인 친구. 프록시. 웹서버로 대신 전달
리스너라는 친구를 열어둬야함
리스너로 데이터를 보내면 알아서 처리하고 주고 받음
프록시의 핵심은 listener

_________________________________

브라우저 -> 프록시 -> 구글 서버

* 웹 프록시 툴을 사용하는 이유.
?> 모의해킹 전문가.

중간에서 데이터가 왔다갔다 하는 것을 볼 수 있음
(어떤 패킷을 주고 받는지 하나하나 볼 수 있음)
https도 보임

All interfaces -> 모바일 앱 해킹할때, 필요
앱이 통신할때, 어떤 요청과 응답을 받는지 proxy를 이용하면 해결이 가능함


프록시 설정을 하면 볼 수 있다.

<intercept>
proxy -> intercept -> open browser 을 하면 지금까지 했던걸 자동으로 할 수 있다.

intercept is on을 하면 데이터를 잡고 있는거임.
여기서 수정 가능

<history>
history 기능 -> 웹 요청이 주루룩 쌓임
정상적으로 로그인을 해보고 history를 하나하나씩 뜯어보면서 검토


<Repeater>
같은 요청을 여러번 반복 시키고 싶으면 오른쪽 클릭 후 send to repeater
값만 일부 바꿔서 send를 하면 됨


<Decoder>
직접 인코딩도 할 수 있고, 디코딩도 할 수 있음.
ex>붙여넣기 후 decoder as 를 base 64로 바꿈

<Comparer>
엄청 긴 코드가 미세하게 달라진 것 같을때, 코드를 모두 복사 후
Comparer에 붙여 넣음 두개를
words는 글자 단위로 비교
Sync view 클릭 하면 화면이 같이 움직임


____________________________________
<문제 풀이>

history를 보면서 풀음
원하는 패킷을 누르면 request와 response를 볼 수 있음

* HTTP Protocol
request

웹 메소드(GET,POST)/경로/http 프로토콜
요청 헤더
Host:
Cache-Control:
Cookie:
~~~~~


응답 response
프로토콜/HTTP Status 코드
응답 헤더

* 상태코드
200 : OK -> 괜찮다. 좋다

300 -> Redirect. 위치를 알려주는 코드
Location이라는 헤더가 보통 같이 응답됨

400 -> Client Error
-> 이용자 니가 잘못한거임.
404 Not Found -> 없는 자료를 요청했을 때

500 -> Server Error


데이터가 있으면
헤더 밑에 한줄을 띄우고 씀
header
~~~~~~

데이터
와 같은 형식


Forward를 눌러도 보내짐.
burp로 보는게 1번 의도


History가 많이 쌓일 경우 History에서 오른쪽 클릭 후 clear history


%3D는 url 디코딩을 하면 =
=으로 끝나는 경우 base64로 디코딩 하는게 낫겟다

base64로 인코딩

_________________________________

* 게시판 구현
현재 로그인 회원가입 마이페이지

로그인을 하고 나서 들어가는 페이지

- 게시판 글 작성 : insert : 회원가입.
글 제목쓰는 칸
글 본문 칸
파일 업로드 x
글 작성 버튼
시간
insert 

- 게시판 글 리스트 보기 : select
DB에 데이터를 가져와서 제목 이름만 보여주면 끝

- 게시판 글 내용 읽기 : select
3번 게시글을 클릭했을 경우, 3번글 db에서 가져옴

- 게시판 글 수정 : update : 마이페이지

- 게시판 글 삭제 : delete


** 게시판 페이징 기능
limit
select * from board limit 0, 10
0번째부터 10개를 가져오는 것

limit [index], [count]


** 게시글 검색

게시글 제목 검색.

select * from board where title like '%normaltic%'

%normaltic : 맨뒤 글자가 normaltic
normaltic% : 맨 앞 글자가 normaltic

** 게시글 정렬 기능

select * from board order by [column 이름] [asc/desc]


____________________________________________

4 주차 과제
[1] 오늘 수업 복습
- Burp : CTF 문제.

[2] Javascript
> 문법 공부해보기(수업 노트).
> 쿠키 탈취 코드 vs 키로거

[3] 게시판 구현
- 게시판 글 작성 : insert : 회원가입.
글 제목쓰는 칸
글 본문 칸
파일 업로드 x
글 작성 버튼
시간
insert

- 게시판 글 리스트 보기 : select
DB에 데이터를 가져와서 제목 이름만 보여주면 끝

- 게시판 글 내용 읽기 : select
3번 게시글을 클릭했을 경우, 3번글 db에서 가져옴

- 게시판 글 수정 : update : 마이페이지

- 게시판 글 삭제 : delete