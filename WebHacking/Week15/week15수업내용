File Upload
- 공격자가 임의의 파일을 업로드할 수 있는 공격.

=> web shell 공격.
서버 측에서 실행 가능한 파일을 업로드할 수 있는 공격.

* 웹 쉘
 한 줄 웹 쉘(One Line Web Shell)
<?php
  system($_GET['c']);
?>
 
일구화목마

* 서버에서 실행할 수 있는 파일을 업로드.

windows server : IIS 웹서버
exe 파일 업로드.

> 어떻게 실행할까요?
눌러서 실행..



웹 서버에서 실행할 수 있는 파일.
PHP

reverseShell.php 업로드 했다.

> 어떻게 실행할까?
웹 요청.

* 업로드한 파일의 경로 (위치)
정확한 경로.

webShell.php

_____________________________
(*) Image Web Shell.
webshell.php.jpg
-> 어떻게 실행될까?

| 불. 가. 능.

-- file upload bypass

> double extension (이중확장자)

webshell.jpg.php

웹 애플리케이션 개발.

-> 파일 업로드, 저장하는 기능을 구현할 때!
앞의 확장자부터 검사

실제 저장될 때 : webshell.jpg.php

* 악성코드 유포. 확장자를 속이는 방법.
normaltic.pdf.exe
-> normaltic.pdf로 인식됨


NULL Byte Injection
| webshell.php%00.jpg
jpg 검사를 통과하고 실제 저장될때는 %00부터 문자가 짤림
webshell.php로 저장됨

* 워게임에서는 왜..?
> webshell.php.jpg
그냥 문제자가 php.jpg(더블 인코딩)를 허용해줘서 그런것

_____________________________

*여전히 엄청난 확신
webshell.php.jpg(원래 이거 아님)


.htaccess
| 웹 설정 파일.
| -> 서버에서 실행할 확장자.

<port swigger 실습> : 파일명 .htaccess

<?php
  system($_GET['c']);
?>
이것을

AddType application/x-httpd-php .normaltic
로 바꿈

파일이 저장되는 위치에

.htaccess 라는 파일이 생김
AddType application/x-httpd-php .normaltic
.normaltic 확장자를 WAS가 처리해야하는 php 코드이구나라고 생각함


webshell 단점
/ 루트 경로로 이동하고 현재 경로를 쳐보면 쉘이 저장된 위치가 뜸.
HTTP 특성
- 파일 주고 끝(메모리가 없기 때문)

따라서 Reverse Shell도 같이 올림

_____________________________

* webshell.jpg 실행..?

* File Include
php

dbConfig.php
<?php
  db 계정적어
  php 코드로
?>

login.php
<?php
  include('dbConfig.php') ; 파일 코드를 가져와서 그대로 실행
?>

include
include_once
require

db 정보.
아이디 / 비밀번호

nav.php
<?php
  include('nav.php');
?>

* 프로그래밍, 해킹, 컴퓨터 공부.
> 게으르기 위해서 노력하고 부지런한 사람.

다시 돌아와서
File Include
* 

web page . 파라미터의 값에 따라서, 다른 페이지를 보여줄거야.

?lang=ko.php
<?php
  include($_GET['lang']);
?>

* 서버에 존재하는 임의의 파일을 가져올 수 있다.
db 계정이 적혀있는 파일.

File Include 취약점
> 소스코드 가져올 수 없다!

* File Include 취약점
> 서버에서 원하는 파일 가져올 수 있다.
> 단, 소스코드 빼고.
> 소스코드를 가져올 수 없기 때문에 엄청난 취약점.
-> 소스코드를 실행했다는 뜻

파일 올리고
Intercept -> .jpg 로 바꿈
Burp에서 ?page=.jpg 경로&cmd=ls

이미지 파일을 실행하고 결과를 전달하기 때문에 웹 쉘 권한을 얻을 수 있음

LFI (Local File Include) 취약점
_____________
파일 업로드가 없네?
파일을 전혀 올릴 껀덕지 x

????
_____________

어떤 파일에 영향을 줄 수 있다.
> 웹 로그

주소창에 상태코드 다 지우고 <?php system($_GET['cmd']);?>
입력하면 access_log에 기록이 남음

access_log
../../../../../opt/lampp/logs/access_log&cmd=ls

<?php system($_GET['cmd']); ?>

File Include 취약점.
> ?

<?php
  include('test.txt');
  include('test.jpg'); // 코드를 그냥 가져와서 붙여넣음
?>

include 취약점

* File Upload 대응 방안

1. 파일 이름 난독화.
> 파일 경로를 감추는 전략.
> 미흡

다운로드가 있는데, 경로를 모를 수 있음?

_____________________________
스터디원 웹 개발 예시
- 인가 취약점.

자료실. 게시판.
> 업로드 한 파일을 웹 경로 어딘가에 저장해두고,
> 얘를 직접 접근해서 다운로드 하도록.

normaltic.com/uploads/test.php

_____________________________

download.php?fileId=254 - 이와 같이 감춤

프사는 경로 노출됨
프로필 사진.
-> 경로가 노출.
web page
<img src="">

2. 확장자 화이트 리스트 기반 필터링.
%00 - NULL Injection으로 우회 가능

3. DB에 파일을 저장하는 방법
파일을 DB에 통째로 저장하는 방법이 있음
BLOB / CLOB
- DB에 저장하면 실행될 여지가 전혀 없음

4. NAS
파일 저장 서버.
웹 서버와 별도로 분리된 서버에 저장
php가 깔려있지 않아야 실행이 안됨

_____________________________
LFI / RFI

Remote File Include
_____________________________

* 파일 다운로드 취약점

download.php?fileName=test.txt

<?php
  fileName = $_GET['fileName'];
  download('/files/' . $fileName);
?>
파일 다운로드는 위와 같은 코드로 이루어져 있을 것임

그러나 fileName을 아래와 같이 변경할 수 있음.
fileName = ../../../../../../etc/passwd
files/../../../../../../etc/passwd ; 경로 이동하는 것 : path traversal

장점 : 소스코드 다운로드 가능.
단점 : 소스코드 실행 X

* 파일 다운로드 취약점을 발견했다?
1. 소스코드(침투테스트, 해킹 관점)
POC
/etc/passwd

windows
/boot.ini
/winnt/win.ini

파일 다운로드 취약점 찾았다?
> 엄청난 취약점.
>

_____________________________

* 침투테스트
| 파일 다운로드 취약점. 어떻게 활용할 수 있는지.

** 리버싱 개념.

_____________________________
* 오늘 수업 내용
>

LFI / RFI
> 웹 서버 내에 있는 파일.

> 외부 서버에 있는 파일.

파일 검증 로직

파일 검증 함수.
파일의 시그니처 확인.

15주차 과제
1. 웹 개발
2. web shell 3
Get Flag File
Get Flag File2

3. 웹 개발 : 블로그 정리
> 파일 다운로드 기능 구현.
> download.php | 로그인 한 사람만, 파일을 다운로드 받을 수 있게.

> 파일을 DB에 저장하는 것. 구현
BLOB / CLOB

4. 내가 만든 웹 서버 취약점 찾고, 보고서 작성해보기
